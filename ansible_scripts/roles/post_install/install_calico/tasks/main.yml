- name: Create directory calico app
  file:
    path: "{{ calico_dir }}"
    state: directory
  
- name: Generate etcd cert
  shell: cat {{ kube_apiserver_cert_dir }}/kubernetes.pem | base64 -w 0
  register: generate_etcd_cert

- name: set_fact | etcd_cert
  set_fact:
    etcd_cert: "{{ generate_etcd_cert.stdout }}"

- name: Generate etcd key
  shell: cat {{ kube_apiserver_cert_dir }}/kubernetes-key.pem | base64 -w 0
  register: generate_etcd_key

- name: set_fact | etcd_key_base64
  set_fact:
    etcd_key: "{{ generate_etcd_key.stdout }}"

- name: Generate etcd ca
  shell: cat {{ pki_ca_dir }}/ca.pem | base64 -w 0
  register: generate_etcd_ca

- name: set_fact | etcd_ca_base64
  set_fact:
    etcd_ca: "{{ generate_etcd_ca.stdout }}"
  
- name: Create calico-etcd.yaml
  template:
    src: calico-etcd.yaml.j2
    dest: "{{ calico_dir }}/calico-etcd.yaml"

- name: Apply calico-etcd.yaml
  shell: kubectl apply -f calico-etcd.yaml
  args:
    chdir: "{{ calico_dir }}"

- name: Wait till the Object is created
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: kube-system
    label_selectors:
      k8s-app=calico-kube-controllers
  register: calico_kube_controllers_pod_info
  until: calico_kube_controllers_pod_info | json_query('resources[*].status.phase') | unique == ["Running"]
  delay: 10
  retries: 12

- name: Wait till the Object is created
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: kube-system
    label_selectors:
      k8s-app=calico-node
  register: calico_node_pod_info
  until: calico_node_pod_info | json_query('resources[*].status.phase') | unique == ["Running"]
  delay: 10
  retries: 12
